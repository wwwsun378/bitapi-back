# 数据库访问配置
# 主数据源，默认的
#oracle数据库配置信息
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521:orcl
#spring.datasource.url=jdbc:oracle:thin:@172.15.28.2:1521:orcl
#spring.datasource.username= csbdc
#spring.datasource.password= 123456
#spring.datasource.driverClassName = oracle.jdbc.OracleDriver
#当遇到同样名字的时候，是否允许覆盖注册
spring.main.allow-bean-definition-overriding=true
feign.ntt.url=yth-backstage
feign.export.name=yth-backstage
#mysql数据库配置信息
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.url=jdbc:mysql://172.19.216.13:3306/tybdc?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8
#spring.datasource.url=jdbc:mysql://117.60.146.227:8080/tybdc?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/lygyth?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8
spring.datasource.username= root
#spring.datasource.password= bitservice
spring.datasource.password= admin
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true


#JPA Configuration:
#spring.jpa.database=ORACLE
spring.jpa.database=mysql
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.generate-ddl=false
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.properties.hibernate.hbm2ddl.auto=none
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
#spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
#####redis相关配置#####
#最大活动对象数
spring.redis.pool.maxTotal=1000
#最大能够保持idel状态的对象数
spring.redis.jedis.pool.max-idle=100
#最小能够保持idel状态的对象数
spring.redis.jedis.pool.min-idle=50
#当池内没有返回对象时，最大等待时间
spring.redis.pool.maxWaitMillis=10000
spring.redis.host=127.0.0.1
spring.redis.password=
spring.redis.port=6379


server.port=8075
spring.application.name=yth-backstage
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:8081/eureka/
eureka.client.healthcheck.enabled=false
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.cloud.client.ip-address}:${server.port}
#文件上传实现方式设置 本地服务器存放dirFile,Ftp存放ftpFile,hdfs存放HDFSFile,fastdfs存放fdfs,db存储dbFile
#db存储到document用户下的fileblob表,create table fileblob(id varchar2(64)  PRIMARY KEY,cfile blob);
file.upload.impl=dirFile
#file.upload.impl=ftpFile
#设置响应为utf-8
spring.http.encoding.force-response=true

#如果是365的upto365 配置如下信息
#file.upto365web=http://218.94.72.94/njhouse/fastdfsApi/client.php
#如果是其他的就file.upload.impl=uptothirdXX 配置如下信息
file.uptothirdurl=http://59.195.9.38:8081/WebDiskServerDemo/

#文件服务器设置
#ftp文件服务器设置不是文件绝对路径是相对ftp文件路径
file.ftp.basedir=/
file.ftp.ip=10.235.13.202
file.ftp.port=21
file.ftp.user=mytt
file.ftp.pwd=bitservice
file.ftp.nginx.url=
#http://10.235.13.202/
#hdfs服务器设置
file.hdfs.basedir=/tmp
file.hdfs.url=hdfs://192.168.1.200:9000/
#本机目录设置
file.local.basedir=c\:/uploadFiles

#fastdfs设置
fdfs.soTimeout=1500
fdfs.connectTimeout=600
fdfs.thumbImage.width=150
fdfs.thumbImage.height=150
fdfs.trackerList[0]=192.168.226.202:22122
fdfs.http.url=http://192.168.226.202/
spring.jmx.enabled=false
##########################
#文件扫描与拍照图片大小的限制
#配置的具体写法:大小:数字,单位B、KB、MB(大小单位不会超过GB，所以在此不配置GB与TB)
#因为用base64方法上传，所以建议编译成base64字符串后的大小不要超过2MB。如需更大，可以配置tomcat的配置文件server.xml
file.scan.maxsize=800
file.scan.type=KB
file.photo.maxsize=800
file.photo.type=KB


########################################################
###THYMELEAF (ThymeleafAutoConfiguration)
########################################################
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
# ;charset=<encoding> is added
spring.thymeleaf.servlet.content-type=text/html
# set to false for hot refresh

spring.thymeleaf.cache=true
divisioncode=999999
export.exportFilePath=c://export//
#openoffice jar
export.converType=jar

shpfile.shpdirectory=C://export//shpfile//
shpfile.zrz.tablename=ZRZ
shpfile.zd.tablename=ZD

mdbfile.mdbdirectory=C://export//mdbfile//

cadfile.caddirectory=C:\\export\\cadfile\\

spring.session.store-type=none
#http://59.195.18.211:8080/rest/adi/bitservice
adi.dataurl=http://10.235.13.195:8080/rest/adi
#aa73e96adb4d4abab7e0539021b31d9c
adi.token=bitservice
#业务系统数据是否允许写入快照库
enableWriteKzk=false

feign.ntt.name=yth-backstage

#是否开启短信工能，在网络不通的情况下不开启
openSendMessage=false
messageActionUrl=http://127.0.0.1:8075/

#ADI接口：通过合同号获取商品现房网签信息的url
adi.interface.get.shangpinxianfangwq_url=/xjfgj/descartes/spxianfangwq
#ADI接口：通过合同号获取商品期房网签信息的url
adi.interface.get.shangpinqifangwq_url=/xjfgj/descartes/spqifangwq

feign.message.name=message
feign.message.url=http://59.195.7.175:80/message/
adi.canCallADI=true
api.canCallAPI=false

adiUrl=http://117.60.146.227:8080/adi-test/bitapi/
adiToken=

ribbon.ReadTimeout=60000000
ribbon.ConnectTimeout=60000000
ribbon.MaxAutoRetries=0
ribbon.MaxAutoRetriesNextServer=1
hystrix.command.default.execution.timeout.enabled=false
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000000

#日志存储位置
logback.logfilepath=d://testall//logs//
#logback日志级别DEBUG, INFO, WARN, ERROR
logback.loglevel=INFO
#日志形式：开发用STDOUT 部署用 FILE
logback.logtype=STDOUT
#读取银行对账清单文件的Job开关
canRunJob=false
canRunApiJob=false

feign.uploadfile.name=yth-backstage

#ebook.ftpip=192.168.0.2
#ebook.ftpport=21
#ebook.ftpusername=ebook
#ebook.ftppassword=123456
#ebook.ftpbasedir=E:/ebook/
# 统一业务通用方法的对应关系
unified.relation.get_search_config=unifieldBussinessServiceImpl
unified.relation.search_data=unifieldBussinessServiceImpl
unified.relation.process_state=unifieldBussinessServiceImpl
unified.relation.ywxl=unifieldBussinessServiceImpl
#验证码的模板id
message.verifyCode_template_id=391638
logging.config=classpath:logback-spring.xml
#logging.tcphost=52.81.9.94:30514
logging.config.path=logs/
logging.level.root=INFO
logging.myFileName=${spring.application.name}
logging.maxFileSize=100MB
logging.maxHistory=90